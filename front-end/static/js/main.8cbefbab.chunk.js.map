{"version":3,"sources":["Components/Login.js","Components/Lk_button.js","Components/Header.js","Components/Main.js","Components/Store.js","Components/Enter.js","Components/Create.js","Components/Things.js","Components/Lk.js","Components/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Login","to","className","Button","color","view","Lk_button","Header","props","state","isLoggedIn","button","this","src","alt","React","Component","Main","JWTToken","localStorage","getItem","Token","token","setItem","Auth","valueEmail","valuePass","value1","handleChange","bind","sub","event","preventDefault","axios","method","url","then","data","window","location","href","console","log","target","value","name","setState","onSubmit","Input","placeholder","type","onChange","Checkbox","id","label","checked","dimension","Reg","useState","valueName","setValueName","e","val","Select","withoutOptionMessage","options","selected","items","onInputChange","isClearable","onInnerMenuOpen","clientRect","Textarea","MultiSelect","Things","Lk","NoMatch","isLogin","App","path","exact","component","Create","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8cbefbab.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Button} from '@holism/core';\n\nconst Login = () => {\n\treturn (\n\t    <div>\n\t\t\t<Link to='/enter' className=\"header_link\">\n\t\t\t\t<Button color=\"white\" className=\"btn_header\" view=\"rounded\">Войти</Button>\n\t\t\t</Link>\n\t\t</div>\n\t  );\n}\n\nexport default Login;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Button} from '@holism/core';\n\nconst Lk_button = () => {\n\treturn (\n\t    <div>\n\t\t\t<Link to='/lk' className=\"header_link\">\n\t\t\t\t<Button color=\"white\" className=\"btn_header\" view=\"rounded\">Личный кабинет</Button>\n\t\t\t</Link>\n\t\t</div>\n\t  );\n}\n\nexport default Lk_button;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nimport Login from './Login'\nimport Lk_button from './Lk_button'\n\nimport '../css/header.css';\n\nclass Header extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoggedIn: props.Login\n\t\t}\n\t}\n\n\n\trender(){\n\n\t\tlet button;\n\n\t\tif (this.state.isLoggedIn) {\n\t      button = <Lk_button />;\n\t    } else {\n\t      button = <Login />;\n\t    }\n\n\t\treturn(\n\t\t\t<div className=\"header\">\n\t\t\t\t<ul className=\"header_list\">\n\t\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t\t<Link to='/main'><img src={\"./img/logo.png\"} alt=\"head\" /></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t\t<Link to='/main' className=\"header_link\">Главная</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t\t<Link to='/things' className=\"header_link\">Идеи</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t\t<Link to='/create' className=\"header_link\">Предложить</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t{button}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button } from '@holism/core';\n\nimport '../css/Main.css';\n\nconst Main = () => {\n\treturn(\n\t\t<div className=\"main_block\">\n\t\t\t<p className=\"subtitle\">Ваши идеи будут услышаны</p>\n\t\t\t<h3 className=\"title\">В связи с ростом компании, мы создали портал, на котором вы можете обмениваться проблемами, идеями и новыми бизнес-решениями</h3>\n\t\t\t<Link to=\"/Create\" className=\"main__link\">\n\t\t\t\t<Button color=\"white\" view=\"rounded\">Предложить</Button>\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n\nexport default Main;","var JWTToken = localStorage.getItem('user_token') || '';\n\nconst Token = (token) =>{\n\tif(!JWTToken){\n\t\tJWTToken = token;\n\t\tlocalStorage.setItem('user_token', token);\n\t}\n\treturn JWTToken; \n}\n\n\nexport default Token;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button, Input, Checkbox } from '@holism/core';\nimport axios from 'axios';\nimport Token from './Store'\n\nimport '../css/Reg.css';\n\n\nclass Auth extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalueEmail : '',\n\t\t\tvaluePass : '',\n\t\t\tvalue1 : false\t\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this);\t\n\t\tthis.sub = this.sub.bind(this);\t\n\t}\n\n\tsub(event, props){\n\t\tevent.preventDefault();\n\t\taxios({\n\t\t    method: 'get',\n\t\t    url: `http://gazprom.trex-studio.ru:9997/api/login?email=user@test&password=test`\n\t\t})\n\t\t\t.then(function (data) {\n\t\t        //handle success\n\n\t\t        Token(data.data.data.token);\n\t\t       \twindow.location.href = '/lk';\n\t\t        console.log(Token(data.data.data.token));\n\t\t    })\n\t}\n\n\thandleChange(event){\n\t\tconsole.log(event.target.value)\n\t\tif(event.target.name === 'email'){\n\t\t\tthis.setState({valueEmail: event.target.value})\n\t\t}\n\n\t\tif(event.target.name === 'pass'){\n\t\t\tthis.setState({valuePass: event.target.value})\n\t\t}\n\n\t}\n\n\t// console.log(event);\n\t// event.preventDefault();\n\t\n\n\trender(){\n\t\treturn(\n\t\t\t<form className=\"main_block_reg\" onSubmit={this.sub}>\n\t\t\t\t<p className=\"text-center block_reg__title\">Войти в личный кабинет</p>\n\t\t\t\t<div className=\"input_reg\">\n\t\t\t\t\t<Input placeholder=\"E-mail\" type=\"email\" name=\"email\" onChange={this.handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input_reg\">\n\t\t\t\t\t<Input placeholder=\"Пароль\" type=\"password\" name=\"pass\" onChange={this.handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input_reg\">\n\t\t\t\t\t<Checkbox\n\t\t\t\t        id=\"CheckboxID\"\n\t\t\t\t        label=\"Запомнить меня\"\n\t\t\t\t        checked={this.state.value1}\n\t\t\t\t      />\n\t\t\t\t</div>\n\t\t\t\t<Button className=\"button_reg\" type=\"submit\" dimension=\"small\">Войти</Button>\n\t\t\t\t<Link to=\"\" className=\"text-center link_more\">\n\t\t\t\t\tЗабыли пароль?\n\t\t\t\t</Link>\n\t\t\t</form>\n\t\t);\n\n\t}\n}\n\nexport default Auth;","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Input, Select, Button, Textarea, MultiSelect } from '@holism/core';\n\nimport '../css/Reg.css';\n\nconst Reg = () => {\n\n\tconst [valueName, setValueName] = useState('');\n\n\tconst optionsData = [\n\t];\n\n\tconst optionsDataMulti = [\n\t];\n\n\n\treturn(\n\t\t<form className=\"main_block_reg\">\n\t\t\t<p className=\"text-center block_reg__title\">Заполните форму, чтобы поделиться своей идеей</p>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"Тема\" value={valueName} onChange={(e, val) => setValueName(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"select_reg\">\n\t\t\t\t<Select\n\t\t\t      placeholder=\"Подразделение\"\n\t\t\t      dimension=\"small\"\n\t\t\t      withoutOptionMessage=\"Ничего не найдено\"\n\t\t\t      options={optionsData}\n\t\t\t      selected={items => console.log('selected items', items)}\n\t\t\t      onChange={value => console.log('Value from changed input', value)}\n\t\t\t      onInputChange={value => console.log('onInputChange from changed input', value)}\n\t\t\t      isClearable={false}\n\t\t\t      onInnerMenuOpen={(clientRect: ClientRect) => {console.log(clientRect)}}\n\t\t\t    />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Textarea placeholder=\"Проблема\" />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Textarea placeholder=\"Решение\" />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<MultiSelect\n\t\t\t      placeholder=\"Ключевые слова\"\n\t\t\t      withoutOptionMessage=\"Ничего не найдено\"\n\t\t\t      options={optionsDataMulti}\n\t\t\t      selected={items => console.log('selected items', items)}\n\t\t\t      onChange={value => console.log('Value from changed input', value)}\n\t\t\t      onInputChange={value => console.log('onInputChange from changed input', value)}\n\t\t\t    />\n\t\t\t</div>\n\t\t\t<Link to=\"/enter\" className=\"text-center\">\n\t\t\t\t<Button className=\"btn_header\" view=\"rounded\">Отправить</Button>\n\t\t\t</Link>\n\t\t</form>\n\t);\n}\n\nexport default Reg;","import React from 'react';\n\nimport '../css/Things.css'\n\nconst Things = () => {\n\n\treturn(\n\t\t<div className=\"main_block_things\">\n\t\t\t<p className=\"block_things__title\">Топ 100</p>\n\t\t\t<div className=\"things_cards\">\n\t\t\t\t<div className=\"things_card\">\n\t\t\t\t\t<div className=\"card_info\">\n\t\t\t\t\t\t<span className=\"card__numb\">1</span>\n\t\t\t\t\t\t<img className=\"card__img\" src={\"./img/user_icon.png\"} alt=\"\"/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Антон Петров</p>\n\t\t\t\t\t\t\t<p>Разработать чат-бота для отправки писем</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card_stat\">\n\t\t\t\t\t\t<span>574</span>\n\t\t\t\t\t\t<img src={\"./img/Up.png\"} alt=\"\" />\n\t\t\t\t\t\t<img src={\"./img/Down.png\"} alt=\"\" />\n\t\t\t\t\t\t<span>4</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Things;","import React from 'react';\n\n\nimport '../css/Lk.css'\n\nconst Lk = () => {\n\n\treturn(\n\t\t<div className=\"block__lk\">\n\t\t\t<div className=\"block_lk__list\">\n\t\t\t\t<ul className=\"lk__list\">\n\t\t\t\t\t<li className=\"lk__item active\">Редактировать профиль</li>\n\t\t\t\t\t<li className=\"lk__item\">Конфиденциальность</li>\n\t\t\t\t\t<li className=\"lk__item\">Мои предложения</li>\n\t\t\t\t\t<li className=\"lk__item\">Понравившиеся</li>\n\t\t\t\t\t<li className=\"lk__item\">Мой рейтинг</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"block_lk__info\">\n\t\t\t\t<div className=\"block_lk_profile\">\n\t\t\t\t\t<h1 className=\"lk_profile__title\">МОЯ ИНФОРМАЦИЯ</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Lk;","import React from 'react';\n\nconst NoMatch = () => {\n\treturn(\n\t\t<div>\n\t\t\t<p>УПС что-то пошло не так вернитесь на <a href=\"/\">главную</a></p>\n\t\t</div>\n\t);\n}\n\nexport default NoMatch;","import React from 'react';\nimport './css/App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\n\nimport Header from './Components/Header';\nimport Main from './Components/Main';\nimport Auth from './Components/Enter';\nimport Create from './Components/Create';\nimport Things from './Components/Things';\nimport Lk from './Components/Lk';\nimport NoMatch from './Components/NoMatch';\nimport Token from './Components/Store'\n\nconst isLogin = Token() ? true : false;\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Router>\n        <div>\n          <Header Login={isLogin}/>\n          <Switch>\n            <Route path='/' exact component={Main} />\n            <Route path='/enter' exact component={Auth} />\n            <Route path='/main' component={Main} />\n            <Route path='/create' component={Create} />\n            <Route path='/lk' component={Lk} />\n            <Route path='/things' component={Things} />\n            <Route component={NoMatch} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}