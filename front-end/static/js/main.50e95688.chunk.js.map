{"version":3,"sources":["Components/Header.js","Components/Reg.js","Components/Main.js","Components/Enter.js","Components/Create.js","Components/Things.js","Components/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","alt","Button","color","view","Reg","useState","valueName","setValueName","valueSerName","setValueSerName","valueFather","setValueFather","valueEmail","setValueEmail","valuePass","setValuePass","valueRepPass","setValueRepPass","action","Input","placeholder","name","value","onChange","e","val","Select","dimension","withoutOptionMessage","options","label","selected","items","console","log","onInputChange","isClearable","onInnerMenuOpen","clientRect","type","Main","Enter","value1","setValue1","Checkbox","id","checked","flag","Textarea","MultiSelect","Things","NoMatch","href","App","path","exact","component","Create","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50e95688.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button } from '@holism/core';\n\nimport '../css/header.css';\n\nconst Header = () => {\n\treturn(\n\t\t<div className=\"header\">\n\t\t\t<ul className=\"header_list\">\n\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t<Link to='/main'><img src={\"./img/logo.png\"} alt=\"head\" /></Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t<Link to='/main' className=\"header_link\">Главная</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t<Link to='/things' className=\"header_link\">Идеи</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"header_item\">\n\t\t\t\t\t<Link to='/create' className=\"header_link\">Предложить</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div>\n\t\t\t\t<Link to='/enter' className=\"header_link\">\n\t\t\t\t\t<Button color=\"white\" className=\"btn_header\" view=\"rounded\">Войти</Button>\n\t\t\t\t</Link>\n\t\t\t\t<Link to='/reg' className=\"header_link\">\n\t\t\t      <Button color=\"white\" className=\"btn_header\"  view=\"rounded\">Зарегистрироваться</Button>\n\t\t\t    </Link>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Input, Select, Button } from '@holism/core';\n\nimport '../css/Reg.css';\n\nconst Reg = () => {\n\n\tconst [valueName, setValueName] = useState('');\n\tconst [valueSerName, setValueSerName] = useState('');\n\tconst [valueFather, setValueFather] = useState('');\n\tconst [valueEmail, setValueEmail] = useState('');\n\tconst [valuePass, setValuePass] = useState('');\n\tconst [valueRepPass, setValueRepPass] = useState('');\n\n\tconst optionsData = [\n\t];\n\n\tconst optionsSex = [\n\t  { label: 'Мужской', value: '0' },\n\t  { label: 'Женский', value: '1' },\n\t];\n\n\t// var gettDate = async () =>{\n\t// \tawait fetch('http://gazprom.trex-studio.ru:9997/divisions').then(response => response.json()).then(data => console.log(data));\n\t\t// const data = api.json();\n\t\t// console.log(data);\n\t\t// for(var key in data){\n\t\t// \toptionsData.push({label: `${key}`, value: `${data[key]}`});\n\t\t// }\n\t// }\n\n\t// window.addEventListener(\"load\", gettDate);\n\n\n\treturn(\n\t\t<form className=\"main_block_reg\" action=\"localhost:8000/registrate\">\n\t\t\t<p className=\"text-center block_reg__title\">Регистрация</p>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"Имя\" name=\"name\" value={valueName} onChange={(e, val) => setValueName(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"Фамилия\" name=\"surname\" value={valueSerName} onChange={(e, val) => setValueSerName(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"Отчество\" name=\"patr\" value={valueFather} onChange={(e, val) => setValueFather(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"select_reg\">\n\t\t\t\t<Select\n\t\t\t      placeholder=\"Пол\"\n\t\t\t      name=\"sex\"\n\t\t\t      dimension=\"small\"\n\t\t\t      withoutOptionMessage=\"Ничего не найдено\"\n\t\t\t      options={optionsSex}\n\t\t\t      selected={items => console.log('selected items', items)}\n\t\t\t      onChange={value => console.log('Value from changed input', value)}\n\t\t\t      onInputChange={value => console.log('onInputChange from changed input', value)}\n\t\t\t      isClearable={false}\n\t\t\t      onInnerMenuOpen={(clientRect: ClientRect) => {console.log(clientRect)}}\n\t\t\t    />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input type=\"email\" placeholder=\"E-mail\" name=\"email\" value={valueEmail} onChange={(e, val) => setValueEmail(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"select_reg\">\n\t\t\t\t<Select\n\t\t\t      placeholder=\"Департамент\"\n\t\t\t      name=\"division\"\n\t\t\t      dimension=\"small\"\n\t\t\t      withoutOptionMessage=\"Ничего не найдено\"\n\t\t\t      options={optionsData}\n\t\t\t      selected={items => console.log('selected items', items)}\n\t\t\t      onChange={value => console.log('Value from changed input', value)}\n\t\t\t      onInputChange={value => console.log('onInputChange from changed input', value)}\n\t\t\t      isClearable={false}\n\t\t\t      onInnerMenuOpen={(clientRect: ClientRect) => {console.log(clientRect)}}\n\t\t\t    />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input type=\"password\" name=\"password\" placeholder=\"Пароль\" value={valuePass} onChange={(e, val) => setValuePass(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input type=\"password\" name=\"passagain\" placeholder=\"Повторите пароль\" value={valueRepPass} onChange={(e, val) => setValueRepPass(val)} />\n\t\t\t</div>\n\t\t\t<Button className=\"button_reg\" type=\"submit\" dimension=\"small\">Зарегистрироваться</Button>\n\t\t\t<Link to=\"/enter\" className=\"text-center link_more\">\n\t\t\t\tУже зарегистрированы? Войти\n\t\t\t</Link>\n\t\t</form>\n\t);\n}\n\nexport default Reg;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button } from '@holism/core';\nimport { RefreshIcon } from '@holism/icons';\n\nimport '../css/Main.css';\n\nconst Main = () => {\n\treturn(\n\t\t<div className=\"main_block\">\n\t\t\t<p className=\"subtitle\">Ваши идеи будут услышаны</p>\n\t\t\t<h3 className=\"title\">В связи с ростом компании, мы создали портал, на котором вы можете обмениваться проблемами, идеями и новыми бизнес-решениями</h3>\n\t\t\t<Link to=\"/Create\" className=\"main__link\">\n\t\t\t\t<Button color=\"white\" view=\"rounded\">Предложить</Button>\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n\nexport default Main;","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button, Input, Checkbox } from '@holism/core';\nimport { RefreshIcon } from '@holism/icons';\n\nimport '../css/Reg.css';\n\n\nconst Enter = () => {\n\tconst [valueEmail, setValueEmail] = useState('');\n\tconst [valuePass, setValuePass] = useState('');\n\tconst [value1, setValue1] = useState(false);\n\n\treturn(\n\t\t<form className=\"main_block_reg\">\n\t\t\t<p className=\"text-center block_reg__title\">Войти в личный кабинет</p>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"E-mail\" type=\"email\"  value={valueEmail} onChange={(e, val) => setValueEmail(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"Пароль\" type=\"password\"  value={valuePass} onChange={(e, val) => setValuePass(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Checkbox\n\t\t\t        id=\"CheckboxID\"\n\t\t\t        label=\"Запомнить меня\"\n\t\t\t        checked={value1}\n\t\t\t        onChange={() => {\n\t\t\t          setValue1(flag => !flag);\n\t\t\t        }}\n\t\t\t      />\n\t\t\t</div>\n\t\t\t<Button className=\"button_reg\" type=\"submit\" dimension=\"small\">Войти</Button>\n\t\t\t<Link to=\"\" className=\"text-center link_more\">\n\t\t\t\tЗабыли пароль?\n\t\t\t</Link>\n\t\t\t<Link to=\"/reg\" className=\"text-center link_more\">\n\t\t\t\tРегистрация\n\t\t\t</Link>\n\t\t</form>\n\t);\n}\n\nexport default Enter;","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Input, Select, Button, Textarea, MultiSelect } from '@holism/core';\n\nimport '../css/Reg.css';\n\nconst Reg = () => {\n\n\tconst [valueName, setValueName] = useState('');\n\tconst [valueSerName, setValueSerName] = useState('');\n\tconst [valueFather, setValueFather] = useState('');\n\tconst [valueEmail, setValueEmail] = useState('');\n\tconst [valuePass, setValuePass] = useState('');\n\tconst [valueRepPass, setValueRepPass] = useState('');\n\n\tconst optionsData = [\n\t];\n\n\tconst optionsDataMulti = [\n\t];\n\n\n\treturn(\n\t\t<form className=\"main_block_reg\">\n\t\t\t<p className=\"text-center block_reg__title\">Заполните форму, чтобы поделиться своей идеей</p>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Input placeholder=\"Тема\" value={valueName} onChange={(e, val) => setValueName(val)} />\n\t\t\t</div>\n\t\t\t<div className=\"select_reg\">\n\t\t\t\t<Select\n\t\t\t      placeholder=\"Подразделение\"\n\t\t\t      dimension=\"small\"\n\t\t\t      withoutOptionMessage=\"Ничего не найдено\"\n\t\t\t      options={optionsData}\n\t\t\t      selected={items => console.log('selected items', items)}\n\t\t\t      onChange={value => console.log('Value from changed input', value)}\n\t\t\t      onInputChange={value => console.log('onInputChange from changed input', value)}\n\t\t\t      isClearable={false}\n\t\t\t      onInnerMenuOpen={(clientRect: ClientRect) => {console.log(clientRect)}}\n\t\t\t    />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Textarea placeholder=\"Проблема\" />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<Textarea placeholder=\"Решение\" />\n\t\t\t</div>\n\t\t\t<div className=\"input_reg\">\n\t\t\t\t<MultiSelect\n\t\t\t      placeholder=\"Ключевые слова\"\n\t\t\t      withoutOptionMessage=\"Ничего не найдено\"\n\t\t\t      options={optionsDataMulti}\n\t\t\t      selected={items => console.log('selected items', items)}\n\t\t\t      onChange={value => console.log('Value from changed input', value)}\n\t\t\t      onInputChange={value => console.log('onInputChange from changed input', value)}\n\t\t\t    />\n\t\t\t</div>\n\t\t\t<Link to=\"/enter\" className=\"text-center\">\n\t\t\t\t<Button className=\"btn_header\" view=\"rounded\">Отправить</Button>\n\t\t\t</Link>\n\t\t</form>\n\t);\n}\n\nexport default Reg;","import React, { useState } from 'react';\n\nimport { CashPutIcon } from '@holism/icons'\n\nimport '../css/Things.css'\n\nconst Things = () => {\n\n\n\treturn(\n\t\t<div className=\"main_block_things\">\n\t\t\t<p className=\"block_things__title\">Топ 100</p>\n\t\t\t<div className=\"things_cards\">\n\t\t\t\t<div className=\"things_card\">\n\t\t\t\t\t<div className=\"card_info\">\n\t\t\t\t\t\t<span className=\"card__numb\">1</span>\n\t\t\t\t\t\t<img className=\"card__img\" src={\"./img/user_icon.png\"} alt=\"\"/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Антон Петров</p>\n\t\t\t\t\t\t\t<p>Разработать чат-бота для отправки писем</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card_stat\">\n\t\t\t\t\t\t<span>574</span>\n\t\t\t\t\t\t<img src={\"./img/Up.png\"} alt=\"\" />\n\t\t\t\t\t\t<img src={\"./img/Down.png\"} alt=\"\" />\n\t\t\t\t\t\t<span>4</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Things;","import React from 'react';\n\nconst NoMatch = () => {\n\treturn(\n\t\t<div>\n\t\t\t<p>УПС что-то пошло не так вернитесь на <a href=\"/\">главную</a></p>\n\t\t</div>\n\t);\n}\n\nexport default NoMatch;","import React from 'react';\nimport './css/App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nimport Header from './Components/Header';\nimport Reg from './Components/Reg';\nimport Main from './Components/Main';\nimport Enter from './Components/Enter';\nimport Create from './Components/Create';\nimport Things from './Components/Things';\nimport NoMatch from './Components/NoMatch';\n\n\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Router>\n        <div>\n          <Header />\n          <Switch>\n            <Route path='/' exact component={Main} />\n            <Route path='/enter' exact component={Enter} />\n            <Route path='/main' component={Main} />\n            <Route path='/reg' component={Reg} />\n            <Route path='/create' component={Create} />\n            <Route path='/things' component={Things} />\n            <Route component={NoMatch} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}